// [START pagespeed_example]
<pagespeed>
	<domain-to-rewrite>*.cdn.myapp.com</domain-to-rewrite>
	<domain-to-rewrite>www.flickr.com</domain-to-rewrite>
	<url-blacklist>http://*/*.svg</url-blacklist>
	<url-blacklist>http://secure.foo.com/*</url-blacklist>
	<enabled-rewriter>CollapseWhitespace</enabled-rewriter>
	<disabled-rewriter>CombineJs</disabled-rewriter>
	<disabled-rewriter>ProxyImages</disabled-rewriter>
</pagespeed>
</appengine-web-app>
// [END pagespeed_example]

// [START custom_error_example]
<static-error-handlers>
	<handler file="default_error.html" />
	<handler file="over_quota.html" error-code="over_quota" />
</static-error-handlers>
// [END custom_error_example]

// [START expiration_example]
<static-files>
	<include path="/**.png" expiration="4d 5h" />
</static-files>
// [END expiration_example]

// [START expiration_example_yaml]
static_files:
- include: /**.png
expiration: 4d 5h
// [END expiration_example_yaml]

// [START static_codesample_xml]
<static-files>
	<include path="/**.png" />
	<exclude path="/data/**.png" />
	// [END static_codesample_xml]

	// [START static_codesample_yaml]
	static_files:
	- include: /**.png
	- exclude: /data/**.png
	// [END static_codesample_yaml]

	// [START resource_codesample_xml]
	<resource-files>
		<include path="/**.xml" />
		<exclude path="/feeds/**.xml" />
		// [END resource_codesample_xml]

		// [START resource_codesample_yaml]
		resource_files:
		- include: /**.xml
		- exclude: /feeds/**.xml
		// [END resource_codesample_yaml]

		//[START header_codesample_xml]
		<static-files>
			<include path="/my_static-files" >
				<http-header name="Access-Control-Allow-Origin" value="http://example.org" />
			</include>
		</static-files>
		//[END header_codesample_xml]

		//[START header_codesample_yaml]
		static_files:
		- include: /static/*
		http_headers:
		Access-Control-Allow-Origin: http://example.org
		//[END header_codesample_yaml]

		//[START mapper_codesample_yaml]
		handlers:
		- url: /red/*
		servlet: mysite.server.TeamServlet
		init_params:
		teamColor: red
		bgColor: "#CC0000"
		name: redteam
		- url: /blue/*
		servlet: mysite.server.TeamServlet
		init_params:
		teamColor: blue
		bgColor: "#0000CC"
		name: blueteam
		- url: /register/*
		jsp: /register/start.jsp
		- url: /*.special
		filter: mysite.server.LogFilterImpl
		init_params:
		logType: special
		//[END mapper_codesample_yaml]

		//[START environment_variables]
		<system-properties>
			<property name="myapp.maximum-message-length" value="140" />
			<property name="myapp.notify-every-n-signups" value="1000" />
			<property name="myapp.notify-url" value="http://www.example.com/signupnotify" />
		</system-properties>

		<env-variables>
			<env-var name="DEFAULT_ENCODING" value="UTF-8" />
		</env-variables>
		//[END environment_variables]

		//[START environment_variables_yaml]
		system_properties:
		myapp.maximum-message-length: 140
		myapp.notify-every-n-signups: 1000
		myapp.notify-url: http://www.example.com/signupnotify
		env_variables:
		DEFAULT_ENCODING: UTF-8
		context_params:
		rack.env: production
		//[END environment_variables_yaml]

		//[START inbound_services]
		<inbound-services>
			<service>mail</service>
			<service>warmup</service>
		</inbound-services>
		//[END inbound_services]

		//[START admin_console_custom_pages]
		<admin-console>
			<page name="Blog Comment Admin" url="/blog/admin/comments" />
			<page name="Create a Blog Post" url="/blog/admin/newentry" />
		</admin-console>
		//[END admin_console_custom_pages]

		//[START about_app_yaml_example]
		application: myapp
		version: alpha-001
		runtime: java
		api_version: 1

		handlers:
		- url: /admin/*
		login: admin
		//[END about_app_yaml_example]

		//[START minimal_appengine_web_xml]
		<?xml version="1.0" encoding="utf-8"?>
		<appengine-web-app xmlns="http://appengine.google.com/ns/1.0">
			<application>_your_app_id_</application>
			<version>alpha-001</version>
			<threadsafe>true</threadsafe>
		</appengine-web-app>
		//[END minimal_appengine_web_xml]

		//[START secure_handler_yaml]
		handlers:

		- url: /youraccount/*
		login: required
		secure: always
		//[END secure_handler_yaml]

		//[START servlet_listeners]
		listeners:
		- com.example.MyListener
		- com.example.MyOtherListener
		//[END servlet_listeners]

		//[START login_example_yaml]
		handlers:

		- url: /profile/*
		login: required

		- url: /admin/*
		servlet: com.example.AdminServlet
		login: admin
		//[END login_example_yaml]

		//[START welcome_files]
		welcome_files:
		- index.jsp
		- index.html
		//[END welcome_files]

		//[START load_on_startup]
		<servlet>
			<servlet-name>my-servlet</servlet-name>
			<servlet-class>com.company.MyServlet</servlet-class>
			<load-on-startup>1</load-on-startup>
		</servlet>
		//[END load_on_startup]

		//[START ServletContextListener]
		<listener>
			<listener-class>com.company.MyListener</listener-class>
		</listener>
		//[END ServletContextListener]

		//[START listener_filter]
		public class MyListener implements ServletContextListener {
		public void contextInitialized(ServletContextEvent event) {
		// This will be invoked as part of a warmup request, or the first user
		// request if no warmup request was invoked.
		}
		public void contextDestroyed(ServletContextEvent event) {
		// App Engine does not currently invoke this method.
		}
		}
		//[END listener_filter]

		//[START custom_warmup_servlet]
		<servlet>
			<servlet-name>_ah_warmup</servlet-name>
			<servlet-class>com.company.MyWarmupServlet</servlet-class>
			//[END custom_warmup_servlet]

			//[START warmup_yaml]
			inbound_services:
			- xmpp_message
			- mail
			//[END warmup_yaml]

			//[START custom_xml_output]
			web_xml: |
			<error-page>
				<error-code>500</error-code>
				<location>/errors/servererror.jsp</location>
			</error-page>
			//[END custom_xml_output]
