/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/google/apis-client-generator/
 * (build: 2016-10-19 16:23:00 PDT)
 * on 2016-10-19 at 23:23:02 UTC 
 * Modify at your own risk.
 */

package com.google.api.services.language.v1;

/**
 * Service definition for CloudNaturalLanguageAPI (v1).
 *
 * <p>
 * Google Cloud Natural Language API provides natural language understanding technologies to developers. Examples include sentiment analysis, entity recognition, and text annotations.
 * </p>
 *
 * <p>
 * For more information about this service, see the
 * <a href="https://cloud.google.com/natural-language/" target="_blank">API Documentation</a>
 * </p>
 *
 * <p>
 * This service uses {@link CloudNaturalLanguageAPIRequestInitializer} to initialize global parameters via its
 * {@link Builder}.
 * </p>
 *
 * @since 1.3
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public class CloudNaturalLanguageAPI extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient {

  // Note: Leave this static initializer at the top of the file.
  static {
    com.google.api.client.util.Preconditions.checkState(
        com.google.api.client.googleapis.GoogleUtils.MAJOR_VERSION == 1 &&
        com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION >= 15,
        "You are currently running with version %s of google-api-client. " +
        "You need at least version 1.15 of google-api-client to run version " +
        "1.22.0-SNAPSHOT of the Google Cloud Natural Language API library.", com.google.api.client.googleapis.GoogleUtils.VERSION);
  }

  /**
   * The default encoded root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_ROOT_URL = "https://language.googleapis.com/";

  /**
   * The default encoded service path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_SERVICE_PATH = "";

  /**
   * The default encoded base URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   */
  public static final String DEFAULT_BASE_URL = DEFAULT_ROOT_URL + DEFAULT_SERVICE_PATH;

  /**
   * Constructor.
   *
   * <p>
   * Use {@link Builder} if you need to specify any of the optional parameters.
   * </p>
   *
   * @param transport HTTP transport, which should normally be:
   *        <ul>
   *        <li>Google App Engine:
   *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
   *        <li>Android: {@code newCompatibleTransport} from
   *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
   *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
   *        </li>
   *        </ul>
   * @param jsonFactory JSON factory, which may be:
   *        <ul>
   *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
   *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
   *        <li>Android Honeycomb or higher:
   *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
   *        </ul>
   * @param httpRequestInitializer HTTP request initializer or {@code null} for none
   * @since 1.7
   */
  public CloudNaturalLanguageAPI(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
      com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
    this(new Builder(transport, jsonFactory, httpRequestInitializer));
  }

  /**
   * @param builder builder
   */
  CloudNaturalLanguageAPI(Builder builder) {
    super(builder);
  }

  @Override
  protected void initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest<?> httpClientRequest) throws java.io.IOException {
    super.initialize(httpClientRequest);
  }

  /**
   * An accessor for creating requests from the Documents collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code CloudNaturalLanguageAPI language = new CloudNaturalLanguageAPI(...);}
   *   {@code CloudNaturalLanguageAPI.Documents.List request = language.documents().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Documents documents() {
    return new Documents();
  }

  /**
   * The "documents" collection of methods.
   */
  public class Documents {

    /**
     * Finds named entities (currently finds proper names) in the text, entity types, salience, mentions
     * for each entity, and other properties.
     *
     * Create a request for the method "documents.analyzeEntities".
     *
     * This request holds the parameters needed by the language server.  After setting any optional
     * parameters, call the {@link AnalyzeEntities#execute()} method to invoke the remote operation.
     *
     * @param content the {@link com.google.api.services.language.v1.model.AnalyzeEntitiesRequest}
     * @return the request
     */
    public AnalyzeEntities analyzeEntities(com.google.api.services.language.v1.model.AnalyzeEntitiesRequest content) throws java.io.IOException {
      AnalyzeEntities result = new AnalyzeEntities(content);
      initialize(result);
      return result;
    }

    public class AnalyzeEntities extends CloudNaturalLanguageAPIRequest<com.google.api.services.language.v1.model.AnalyzeEntitiesResponse> {

      private static final String REST_PATH = "v1/documents:analyzeEntities";

      /**
       * Finds named entities (currently finds proper names) in the text, entity types, salience,
       * mentions for each entity, and other properties.
       *
       * Create a request for the method "documents.analyzeEntities".
       *
       * This request holds the parameters needed by the the language server.  After setting any
       * optional parameters, call the {@link AnalyzeEntities#execute()} method to invoke the remote
       * operation. <p> {@link AnalyzeEntities#initialize(com.google.api.client.googleapis.services.Abst
       * ractGoogleClientRequest)} must be called to initialize this instance immediately after invoking
       * the constructor. </p>
       *
       * @param content the {@link com.google.api.services.language.v1.model.AnalyzeEntitiesRequest}
       * @since 1.13
       */
      protected AnalyzeEntities(com.google.api.services.language.v1.model.AnalyzeEntitiesRequest content) {
        super(CloudNaturalLanguageAPI.this, "POST", REST_PATH, content, com.google.api.services.language.v1.model.AnalyzeEntitiesResponse.class);
      }

      @Override
      public AnalyzeEntities set$Xgafv(java.lang.String $Xgafv) {
        return (AnalyzeEntities) super.set$Xgafv($Xgafv);
      }

      @Override
      public AnalyzeEntities setAccessToken(java.lang.String accessToken) {
        return (AnalyzeEntities) super.setAccessToken(accessToken);
      }

      @Override
      public AnalyzeEntities setAlt(java.lang.String alt) {
        return (AnalyzeEntities) super.setAlt(alt);
      }

      @Override
      public AnalyzeEntities setBearerToken(java.lang.String bearerToken) {
        return (AnalyzeEntities) super.setBearerToken(bearerToken);
      }

      @Override
      public AnalyzeEntities setCallback(java.lang.String callback) {
        return (AnalyzeEntities) super.setCallback(callback);
      }

      @Override
      public AnalyzeEntities setFields(java.lang.String fields) {
        return (AnalyzeEntities) super.setFields(fields);
      }

      @Override
      public AnalyzeEntities setKey(java.lang.String key) {
        return (AnalyzeEntities) super.setKey(key);
      }

      @Override
      public AnalyzeEntities setOauthToken(java.lang.String oauthToken) {
        return (AnalyzeEntities) super.setOauthToken(oauthToken);
      }

      @Override
      public AnalyzeEntities setPp(java.lang.Boolean pp) {
        return (AnalyzeEntities) super.setPp(pp);
      }

      @Override
      public AnalyzeEntities setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (AnalyzeEntities) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public AnalyzeEntities setQuotaUser(java.lang.String quotaUser) {
        return (AnalyzeEntities) super.setQuotaUser(quotaUser);
      }

      @Override
      public AnalyzeEntities setUploadType(java.lang.String uploadType) {
        return (AnalyzeEntities) super.setUploadType(uploadType);
      }

      @Override
      public AnalyzeEntities setUploadProtocol(java.lang.String uploadProtocol) {
        return (AnalyzeEntities) super.setUploadProtocol(uploadProtocol);
      }

      @Override
      public AnalyzeEntities set(String parameterName, Object value) {
        return (AnalyzeEntities) super.set(parameterName, value);
      }
    }
    /**
     * Analyzes the sentiment of the provided text.
     *
     * Create a request for the method "documents.analyzeSentiment".
     *
     * This request holds the parameters needed by the language server.  After setting any optional
     * parameters, call the {@link AnalyzeSentiment#execute()} method to invoke the remote operation.
     *
     * @param content the {@link com.google.api.services.language.v1.model.AnalyzeSentimentRequest}
     * @return the request
     */
    public AnalyzeSentiment analyzeSentiment(com.google.api.services.language.v1.model.AnalyzeSentimentRequest content) throws java.io.IOException {
      AnalyzeSentiment result = new AnalyzeSentiment(content);
      initialize(result);
      return result;
    }

    public class AnalyzeSentiment extends CloudNaturalLanguageAPIRequest<com.google.api.services.language.v1.model.AnalyzeSentimentResponse> {

      private static final String REST_PATH = "v1/documents:analyzeSentiment";

      /**
       * Analyzes the sentiment of the provided text.
       *
       * Create a request for the method "documents.analyzeSentiment".
       *
       * This request holds the parameters needed by the the language server.  After setting any
       * optional parameters, call the {@link AnalyzeSentiment#execute()} method to invoke the remote
       * operation. <p> {@link AnalyzeSentiment#initialize(com.google.api.client.googleapis.services.Abs
       * tractGoogleClientRequest)} must be called to initialize this instance immediately after
       * invoking the constructor. </p>
       *
       * @param content the {@link com.google.api.services.language.v1.model.AnalyzeSentimentRequest}
       * @since 1.13
       */
      protected AnalyzeSentiment(com.google.api.services.language.v1.model.AnalyzeSentimentRequest content) {
        super(CloudNaturalLanguageAPI.this, "POST", REST_PATH, content, com.google.api.services.language.v1.model.AnalyzeSentimentResponse.class);
      }

      @Override
      public AnalyzeSentiment set$Xgafv(java.lang.String $Xgafv) {
        return (AnalyzeSentiment) super.set$Xgafv($Xgafv);
      }

      @Override
      public AnalyzeSentiment setAccessToken(java.lang.String accessToken) {
        return (AnalyzeSentiment) super.setAccessToken(accessToken);
      }

      @Override
      public AnalyzeSentiment setAlt(java.lang.String alt) {
        return (AnalyzeSentiment) super.setAlt(alt);
      }

      @Override
      public AnalyzeSentiment setBearerToken(java.lang.String bearerToken) {
        return (AnalyzeSentiment) super.setBearerToken(bearerToken);
      }

      @Override
      public AnalyzeSentiment setCallback(java.lang.String callback) {
        return (AnalyzeSentiment) super.setCallback(callback);
      }

      @Override
      public AnalyzeSentiment setFields(java.lang.String fields) {
        return (AnalyzeSentiment) super.setFields(fields);
      }

      @Override
      public AnalyzeSentiment setKey(java.lang.String key) {
        return (AnalyzeSentiment) super.setKey(key);
      }

      @Override
      public AnalyzeSentiment setOauthToken(java.lang.String oauthToken) {
        return (AnalyzeSentiment) super.setOauthToken(oauthToken);
      }

      @Override
      public AnalyzeSentiment setPp(java.lang.Boolean pp) {
        return (AnalyzeSentiment) super.setPp(pp);
      }

      @Override
      public AnalyzeSentiment setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (AnalyzeSentiment) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public AnalyzeSentiment setQuotaUser(java.lang.String quotaUser) {
        return (AnalyzeSentiment) super.setQuotaUser(quotaUser);
      }

      @Override
      public AnalyzeSentiment setUploadType(java.lang.String uploadType) {
        return (AnalyzeSentiment) super.setUploadType(uploadType);
      }

      @Override
      public AnalyzeSentiment setUploadProtocol(java.lang.String uploadProtocol) {
        return (AnalyzeSentiment) super.setUploadProtocol(uploadProtocol);
      }

      @Override
      public AnalyzeSentiment set(String parameterName, Object value) {
        return (AnalyzeSentiment) super.set(parameterName, value);
      }
    }
    /**
     * Analyzes the syntax of the text and provides sentence boundaries and tokenization along with part
     * of speech tags, dependency trees, and other properties.
     *
     * Create a request for the method "documents.analyzeSyntax".
     *
     * This request holds the parameters needed by the language server.  After setting any optional
     * parameters, call the {@link AnalyzeSyntax#execute()} method to invoke the remote operation.
     *
     * @param content the {@link com.google.api.services.language.v1.model.AnalyzeSyntaxRequest}
     * @return the request
     */
    public AnalyzeSyntax analyzeSyntax(com.google.api.services.language.v1.model.AnalyzeSyntaxRequest content) throws java.io.IOException {
      AnalyzeSyntax result = new AnalyzeSyntax(content);
      initialize(result);
      return result;
    }

    public class AnalyzeSyntax extends CloudNaturalLanguageAPIRequest<com.google.api.services.language.v1.model.AnalyzeSyntaxResponse> {

      private static final String REST_PATH = "v1/documents:analyzeSyntax";

      /**
       * Analyzes the syntax of the text and provides sentence boundaries and tokenization along with
       * part of speech tags, dependency trees, and other properties.
       *
       * Create a request for the method "documents.analyzeSyntax".
       *
       * This request holds the parameters needed by the the language server.  After setting any
       * optional parameters, call the {@link AnalyzeSyntax#execute()} method to invoke the remote
       * operation. <p> {@link AnalyzeSyntax#initialize(com.google.api.client.googleapis.services.Abstra
       * ctGoogleClientRequest)} must be called to initialize this instance immediately after invoking
       * the constructor. </p>
       *
       * @param content the {@link com.google.api.services.language.v1.model.AnalyzeSyntaxRequest}
       * @since 1.13
       */
      protected AnalyzeSyntax(com.google.api.services.language.v1.model.AnalyzeSyntaxRequest content) {
        super(CloudNaturalLanguageAPI.this, "POST", REST_PATH, content, com.google.api.services.language.v1.model.AnalyzeSyntaxResponse.class);
      }

      @Override
      public AnalyzeSyntax set$Xgafv(java.lang.String $Xgafv) {
        return (AnalyzeSyntax) super.set$Xgafv($Xgafv);
      }

      @Override
      public AnalyzeSyntax setAccessToken(java.lang.String accessToken) {
        return (AnalyzeSyntax) super.setAccessToken(accessToken);
      }

      @Override
      public AnalyzeSyntax setAlt(java.lang.String alt) {
        return (AnalyzeSyntax) super.setAlt(alt);
      }

      @Override
      public AnalyzeSyntax setBearerToken(java.lang.String bearerToken) {
        return (AnalyzeSyntax) super.setBearerToken(bearerToken);
      }

      @Override
      public AnalyzeSyntax setCallback(java.lang.String callback) {
        return (AnalyzeSyntax) super.setCallback(callback);
      }

      @Override
      public AnalyzeSyntax setFields(java.lang.String fields) {
        return (AnalyzeSyntax) super.setFields(fields);
      }

      @Override
      public AnalyzeSyntax setKey(java.lang.String key) {
        return (AnalyzeSyntax) super.setKey(key);
      }

      @Override
      public AnalyzeSyntax setOauthToken(java.lang.String oauthToken) {
        return (AnalyzeSyntax) super.setOauthToken(oauthToken);
      }

      @Override
      public AnalyzeSyntax setPp(java.lang.Boolean pp) {
        return (AnalyzeSyntax) super.setPp(pp);
      }

      @Override
      public AnalyzeSyntax setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (AnalyzeSyntax) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public AnalyzeSyntax setQuotaUser(java.lang.String quotaUser) {
        return (AnalyzeSyntax) super.setQuotaUser(quotaUser);
      }

      @Override
      public AnalyzeSyntax setUploadType(java.lang.String uploadType) {
        return (AnalyzeSyntax) super.setUploadType(uploadType);
      }

      @Override
      public AnalyzeSyntax setUploadProtocol(java.lang.String uploadProtocol) {
        return (AnalyzeSyntax) super.setUploadProtocol(uploadProtocol);
      }

      @Override
      public AnalyzeSyntax set(String parameterName, Object value) {
        return (AnalyzeSyntax) super.set(parameterName, value);
      }
    }
    /**
     * A convenience method that provides all the features that analyzeSentiment, analyzeEntities, and
     * analyzeSyntax provide in one call.
     *
     * Create a request for the method "documents.annotateText".
     *
     * This request holds the parameters needed by the language server.  After setting any optional
     * parameters, call the {@link AnnotateText#execute()} method to invoke the remote operation.
     *
     * @param content the {@link com.google.api.services.language.v1.model.AnnotateTextRequest}
     * @return the request
     */
    public AnnotateText annotateText(com.google.api.services.language.v1.model.AnnotateTextRequest content) throws java.io.IOException {
      AnnotateText result = new AnnotateText(content);
      initialize(result);
      return result;
    }

    public class AnnotateText extends CloudNaturalLanguageAPIRequest<com.google.api.services.language.v1.model.AnnotateTextResponse> {

      private static final String REST_PATH = "v1/documents:annotateText";

      /**
       * A convenience method that provides all the features that analyzeSentiment, analyzeEntities, and
       * analyzeSyntax provide in one call.
       *
       * Create a request for the method "documents.annotateText".
       *
       * This request holds the parameters needed by the the language server.  After setting any
       * optional parameters, call the {@link AnnotateText#execute()} method to invoke the remote
       * operation. <p> {@link
       * AnnotateText#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param content the {@link com.google.api.services.language.v1.model.AnnotateTextRequest}
       * @since 1.13
       */
      protected AnnotateText(com.google.api.services.language.v1.model.AnnotateTextRequest content) {
        super(CloudNaturalLanguageAPI.this, "POST", REST_PATH, content, com.google.api.services.language.v1.model.AnnotateTextResponse.class);
      }

      @Override
      public AnnotateText set$Xgafv(java.lang.String $Xgafv) {
        return (AnnotateText) super.set$Xgafv($Xgafv);
      }

      @Override
      public AnnotateText setAccessToken(java.lang.String accessToken) {
        return (AnnotateText) super.setAccessToken(accessToken);
      }

      @Override
      public AnnotateText setAlt(java.lang.String alt) {
        return (AnnotateText) super.setAlt(alt);
      }

      @Override
      public AnnotateText setBearerToken(java.lang.String bearerToken) {
        return (AnnotateText) super.setBearerToken(bearerToken);
      }

      @Override
      public AnnotateText setCallback(java.lang.String callback) {
        return (AnnotateText) super.setCallback(callback);
      }

      @Override
      public AnnotateText setFields(java.lang.String fields) {
        return (AnnotateText) super.setFields(fields);
      }

      @Override
      public AnnotateText setKey(java.lang.String key) {
        return (AnnotateText) super.setKey(key);
      }

      @Override
      public AnnotateText setOauthToken(java.lang.String oauthToken) {
        return (AnnotateText) super.setOauthToken(oauthToken);
      }

      @Override
      public AnnotateText setPp(java.lang.Boolean pp) {
        return (AnnotateText) super.setPp(pp);
      }

      @Override
      public AnnotateText setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (AnnotateText) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public AnnotateText setQuotaUser(java.lang.String quotaUser) {
        return (AnnotateText) super.setQuotaUser(quotaUser);
      }

      @Override
      public AnnotateText setUploadType(java.lang.String uploadType) {
        return (AnnotateText) super.setUploadType(uploadType);
      }

      @Override
      public AnnotateText setUploadProtocol(java.lang.String uploadProtocol) {
        return (AnnotateText) super.setUploadProtocol(uploadProtocol);
      }

      @Override
      public AnnotateText set(String parameterName, Object value) {
        return (AnnotateText) super.set(parameterName, value);
      }
    }

  }

  /**
   * An accessor for creating requests from the Operations collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code CloudNaturalLanguageAPI language = new CloudNaturalLanguageAPI(...);}
   *   {@code CloudNaturalLanguageAPI.Operations.List request = language.operations().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Operations operations() {
    return new Operations();
  }

  /**
   * The "operations" collection of methods.
   */
  public class Operations {

    /**
     * Starts asynchronous cancellation on a long-running operation.  The server makes a best effort to
     * cancel the operation, but success is not guaranteed.  If the server doesn't support this method,
     * it returns `google.rpc.Code.UNIMPLEMENTED`.  Clients can use Operations.GetOperation or other
     * methods to check whether the cancellation succeeded or whether the operation completed despite
     * cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an
     * operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to
     * `Code.CANCELLED`.
     *
     * Create a request for the method "operations.cancel".
     *
     * This request holds the parameters needed by the language server.  After setting any optional
     * parameters, call the {@link Cancel#execute()} method to invoke the remote operation.
     *
     * @param name The name of the operation resource to be cancelled.
     * @param content the {@link com.google.api.services.language.v1.model.CancelOperationRequest}
     * @return the request
     */
    public Cancel cancel(java.lang.String name, com.google.api.services.language.v1.model.CancelOperationRequest content) throws java.io.IOException {
      Cancel result = new Cancel(name, content);
      initialize(result);
      return result;
    }

    public class Cancel extends CloudNaturalLanguageAPIRequest<com.google.api.services.language.v1.model.Empty> {

      private static final String REST_PATH = "v1/{+name}:cancel";

      private final java.util.regex.Pattern NAME_PATTERN =
          java.util.regex.Pattern.compile("^operations/.*$");

      /**
       * Starts asynchronous cancellation on a long-running operation.  The server makes a best effort
       * to cancel the operation, but success is not guaranteed.  If the server doesn't support this
       * method, it returns `google.rpc.Code.UNIMPLEMENTED`.  Clients can use Operations.GetOperation or
       * other methods to check whether the cancellation succeeded or whether the operation completed
       * despite cancellation. On successful cancellation, the operation is not deleted; instead, it
       * becomes an operation with an Operation.error value with a google.rpc.Status.code of 1,
       * corresponding to `Code.CANCELLED`.
       *
       * Create a request for the method "operations.cancel".
       *
       * This request holds the parameters needed by the the language server.  After setting any
       * optional parameters, call the {@link Cancel#execute()} method to invoke the remote operation.
       * <p> {@link
       * Cancel#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param name The name of the operation resource to be cancelled.
       * @param content the {@link com.google.api.services.language.v1.model.CancelOperationRequest}
       * @since 1.13
       */
      protected Cancel(java.lang.String name, com.google.api.services.language.v1.model.CancelOperationRequest content) {
        super(CloudNaturalLanguageAPI.this, "POST", REST_PATH, content, com.google.api.services.language.v1.model.Empty.class);
        this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
              "Parameter name must conform to the pattern " +
              "^operations/.*$");
        }
      }

      @Override
      public Cancel set$Xgafv(java.lang.String $Xgafv) {
        return (Cancel) super.set$Xgafv($Xgafv);
      }

      @Override
      public Cancel setAccessToken(java.lang.String accessToken) {
        return (Cancel) super.setAccessToken(accessToken);
      }

      @Override
      public Cancel setAlt(java.lang.String alt) {
        return (Cancel) super.setAlt(alt);
      }

      @Override
      public Cancel setBearerToken(java.lang.String bearerToken) {
        return (Cancel) super.setBearerToken(bearerToken);
      }

      @Override
      public Cancel setCallback(java.lang.String callback) {
        return (Cancel) super.setCallback(callback);
      }

      @Override
      public Cancel setFields(java.lang.String fields) {
        return (Cancel) super.setFields(fields);
      }

      @Override
      public Cancel setKey(java.lang.String key) {
        return (Cancel) super.setKey(key);
      }

      @Override
      public Cancel setOauthToken(java.lang.String oauthToken) {
        return (Cancel) super.setOauthToken(oauthToken);
      }

      @Override
      public Cancel setPp(java.lang.Boolean pp) {
        return (Cancel) super.setPp(pp);
      }

      @Override
      public Cancel setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Cancel) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Cancel setQuotaUser(java.lang.String quotaUser) {
        return (Cancel) super.setQuotaUser(quotaUser);
      }

      @Override
      public Cancel setUploadType(java.lang.String uploadType) {
        return (Cancel) super.setUploadType(uploadType);
      }

      @Override
      public Cancel setUploadProtocol(java.lang.String uploadProtocol) {
        return (Cancel) super.setUploadProtocol(uploadProtocol);
      }

      /** The name of the operation resource to be cancelled. */
      @com.google.api.client.util.Key
      private java.lang.String name;

      /** The name of the operation resource to be cancelled.
       */
      public java.lang.String getName() {
        return name;
      }

      /** The name of the operation resource to be cancelled. */
      public Cancel setName(java.lang.String name) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
              "Parameter name must conform to the pattern " +
              "^operations/.*$");
        }
        this.name = name;
        return this;
      }

      @Override
      public Cancel set(String parameterName, Object value) {
        return (Cancel) super.set(parameterName, value);
      }
    }
    /**
     * Deletes a long-running operation. This method indicates that the client is no longer interested
     * in the operation result. It does not cancel the operation. If the server doesn't support this
     * method, it returns `google.rpc.Code.UNIMPLEMENTED`.
     *
     * Create a request for the method "operations.delete".
     *
     * This request holds the parameters needed by the language server.  After setting any optional
     * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
     *
     * @param name The name of the operation resource to be deleted.
     * @return the request
     */
    public Delete delete(java.lang.String name) throws java.io.IOException {
      Delete result = new Delete(name);
      initialize(result);
      return result;
    }

    public class Delete extends CloudNaturalLanguageAPIRequest<com.google.api.services.language.v1.model.Empty> {

      private static final String REST_PATH = "v1/{+name}";

      private final java.util.regex.Pattern NAME_PATTERN =
          java.util.regex.Pattern.compile("^operations/.*$");

      /**
       * Deletes a long-running operation. This method indicates that the client is no longer interested
       * in the operation result. It does not cancel the operation. If the server doesn't support this
       * method, it returns `google.rpc.Code.UNIMPLEMENTED`.
       *
       * Create a request for the method "operations.delete".
       *
       * This request holds the parameters needed by the the language server.  After setting any
       * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
       * <p> {@link
       * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param name The name of the operation resource to be deleted.
       * @since 1.13
       */
      protected Delete(java.lang.String name) {
        super(CloudNaturalLanguageAPI.this, "DELETE", REST_PATH, null, com.google.api.services.language.v1.model.Empty.class);
        this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
              "Parameter name must conform to the pattern " +
              "^operations/.*$");
        }
      }

      @Override
      public Delete set$Xgafv(java.lang.String $Xgafv) {
        return (Delete) super.set$Xgafv($Xgafv);
      }

      @Override
      public Delete setAccessToken(java.lang.String accessToken) {
        return (Delete) super.setAccessToken(accessToken);
      }

      @Override
      public Delete setAlt(java.lang.String alt) {
        return (Delete) super.setAlt(alt);
      }

      @Override
      public Delete setBearerToken(java.lang.String bearerToken) {
        return (Delete) super.setBearerToken(bearerToken);
      }

      @Override
      public Delete setCallback(java.lang.String callback) {
        return (Delete) super.setCallback(callback);
      }

      @Override
      public Delete setFields(java.lang.String fields) {
        return (Delete) super.setFields(fields);
      }

      @Override
      public Delete setKey(java.lang.String key) {
        return (Delete) super.setKey(key);
      }

      @Override
      public Delete setOauthToken(java.lang.String oauthToken) {
        return (Delete) super.setOauthToken(oauthToken);
      }

      @Override
      public Delete setPp(java.lang.Boolean pp) {
        return (Delete) super.setPp(pp);
      }

      @Override
      public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Delete) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Delete setQuotaUser(java.lang.String quotaUser) {
        return (Delete) super.setQuotaUser(quotaUser);
      }

      @Override
      public Delete setUploadType(java.lang.String uploadType) {
        return (Delete) super.setUploadType(uploadType);
      }

      @Override
      public Delete setUploadProtocol(java.lang.String uploadProtocol) {
        return (Delete) super.setUploadProtocol(uploadProtocol);
      }

      /** The name of the operation resource to be deleted. */
      @com.google.api.client.util.Key
      private java.lang.String name;

      /** The name of the operation resource to be deleted.
       */
      public java.lang.String getName() {
        return name;
      }

      /** The name of the operation resource to be deleted. */
      public Delete setName(java.lang.String name) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
              "Parameter name must conform to the pattern " +
              "^operations/.*$");
        }
        this.name = name;
        return this;
      }

      @Override
      public Delete set(String parameterName, Object value) {
        return (Delete) super.set(parameterName, value);
      }
    }
    /**
     * Gets the latest state of a long-running operation.  Clients can use this method to poll the
     * operation result at intervals as recommended by the API service.
     *
     * Create a request for the method "operations.get".
     *
     * This request holds the parameters needed by the language server.  After setting any optional
     * parameters, call the {@link Get#execute()} method to invoke the remote operation.
     *
     * @param name The name of the operation resource.
     * @return the request
     */
    public Get get(java.lang.String name) throws java.io.IOException {
      Get result = new Get(name);
      initialize(result);
      return result;
    }

    public class Get extends CloudNaturalLanguageAPIRequest<com.google.api.services.language.v1.model.Operation> {

      private static final String REST_PATH = "v1/{+name}";

      private final java.util.regex.Pattern NAME_PATTERN =
          java.util.regex.Pattern.compile("^operations/.*$");

      /**
       * Gets the latest state of a long-running operation.  Clients can use this method to poll the
       * operation result at intervals as recommended by the API service.
       *
       * Create a request for the method "operations.get".
       *
       * This request holds the parameters needed by the the language server.  After setting any
       * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
       * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param name The name of the operation resource.
       * @since 1.13
       */
      protected Get(java.lang.String name) {
        super(CloudNaturalLanguageAPI.this, "GET", REST_PATH, null, com.google.api.services.language.v1.model.Operation.class);
        this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
              "Parameter name must conform to the pattern " +
              "^operations/.*$");
        }
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public Get set$Xgafv(java.lang.String $Xgafv) {
        return (Get) super.set$Xgafv($Xgafv);
      }

      @Override
      public Get setAccessToken(java.lang.String accessToken) {
        return (Get) super.setAccessToken(accessToken);
      }

      @Override
      public Get setAlt(java.lang.String alt) {
        return (Get) super.setAlt(alt);
      }

      @Override
      public Get setBearerToken(java.lang.String bearerToken) {
        return (Get) super.setBearerToken(bearerToken);
      }

      @Override
      public Get setCallback(java.lang.String callback) {
        return (Get) super.setCallback(callback);
      }

      @Override
      public Get setFields(java.lang.String fields) {
        return (Get) super.setFields(fields);
      }

      @Override
      public Get setKey(java.lang.String key) {
        return (Get) super.setKey(key);
      }

      @Override
      public Get setOauthToken(java.lang.String oauthToken) {
        return (Get) super.setOauthToken(oauthToken);
      }

      @Override
      public Get setPp(java.lang.Boolean pp) {
        return (Get) super.setPp(pp);
      }

      @Override
      public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Get) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Get setQuotaUser(java.lang.String quotaUser) {
        return (Get) super.setQuotaUser(quotaUser);
      }

      @Override
      public Get setUploadType(java.lang.String uploadType) {
        return (Get) super.setUploadType(uploadType);
      }

      @Override
      public Get setUploadProtocol(java.lang.String uploadProtocol) {
        return (Get) super.setUploadProtocol(uploadProtocol);
      }

      /** The name of the operation resource. */
      @com.google.api.client.util.Key
      private java.lang.String name;

      /** The name of the operation resource.
       */
      public java.lang.String getName() {
        return name;
      }

      /** The name of the operation resource. */
      public Get setName(java.lang.String name) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
              "Parameter name must conform to the pattern " +
              "^operations/.*$");
        }
        this.name = name;
        return this;
      }

      @Override
      public Get set(String parameterName, Object value) {
        return (Get) super.set(parameterName, value);
      }
    }
    /**
     * Lists operations that match the specified filter in the request. If the server doesn't support
     * this method, it returns `UNIMPLEMENTED`.
     *
     * NOTE: the `name` binding below allows API services to override the binding to use different
     * resource name schemes, such as `users/operations`.
     *
     * Create a request for the method "operations.list".
     *
     * This request holds the parameters needed by the language server.  After setting any optional
     * parameters, call the {@link List#execute()} method to invoke the remote operation.
     *
     * @param name The name of the operation collection.
     * @return the request
     */
    public List list(java.lang.String name) throws java.io.IOException {
      List result = new List(name);
      initialize(result);
      return result;
    }

    public class List extends CloudNaturalLanguageAPIRequest<com.google.api.services.language.v1.model.ListOperationsResponse> {

      private static final String REST_PATH = "v1/{+name}";

      private final java.util.regex.Pattern NAME_PATTERN =
          java.util.regex.Pattern.compile("^operations$");

      /**
       * Lists operations that match the specified filter in the request. If the server doesn't support
       * this method, it returns `UNIMPLEMENTED`.
       *
       * NOTE: the `name` binding below allows API services to override the binding to use different
       * resource name schemes, such as `users/operations`.
       *
       * Create a request for the method "operations.list".
       *
       * This request holds the parameters needed by the the language server.  After setting any
       * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
       * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param name The name of the operation collection.
       * @since 1.13
       */
      protected List(java.lang.String name) {
        super(CloudNaturalLanguageAPI.this, "GET", REST_PATH, null, com.google.api.services.language.v1.model.ListOperationsResponse.class);
        this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
              "Parameter name must conform to the pattern " +
              "^operations$");
        }
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public List set$Xgafv(java.lang.String $Xgafv) {
        return (List) super.set$Xgafv($Xgafv);
      }

      @Override
      public List setAccessToken(java.lang.String accessToken) {
        return (List) super.setAccessToken(accessToken);
      }

      @Override
      public List setAlt(java.lang.String alt) {
        return (List) super.setAlt(alt);
      }

      @Override
      public List setBearerToken(java.lang.String bearerToken) {
        return (List) super.setBearerToken(bearerToken);
      }

      @Override
      public List setCallback(java.lang.String callback) {
        return (List) super.setCallback(callback);
      }

      @Override
      public List setFields(java.lang.String fields) {
        return (List) super.setFields(fields);
      }

      @Override
      public List setKey(java.lang.String key) {
        return (List) super.setKey(key);
      }

      @Override
      public List setOauthToken(java.lang.String oauthToken) {
        return (List) super.setOauthToken(oauthToken);
      }

      @Override
      public List setPp(java.lang.Boolean pp) {
        return (List) super.setPp(pp);
      }

      @Override
      public List setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (List) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public List setQuotaUser(java.lang.String quotaUser) {
        return (List) super.setQuotaUser(quotaUser);
      }

      @Override
      public List setUploadType(java.lang.String uploadType) {
        return (List) super.setUploadType(uploadType);
      }

      @Override
      public List setUploadProtocol(java.lang.String uploadProtocol) {
        return (List) super.setUploadProtocol(uploadProtocol);
      }

      /** The name of the operation collection. */
      @com.google.api.client.util.Key
      private java.lang.String name;

      /** The name of the operation collection.
       */
      public java.lang.String getName() {
        return name;
      }

      /** The name of the operation collection. */
      public List setName(java.lang.String name) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
              "Parameter name must conform to the pattern " +
              "^operations$");
        }
        this.name = name;
        return this;
      }

      /** The standard list page size. */
      @com.google.api.client.util.Key
      private java.lang.Integer pageSize;

      /** The standard list page size.
       */
      public java.lang.Integer getPageSize() {
        return pageSize;
      }

      /** The standard list page size. */
      public List setPageSize(java.lang.Integer pageSize) {
        this.pageSize = pageSize;
        return this;
      }

      /** The standard list filter. */
      @com.google.api.client.util.Key
      private java.lang.String filter;

      /** The standard list filter.
       */
      public java.lang.String getFilter() {
        return filter;
      }

      /** The standard list filter. */
      public List setFilter(java.lang.String filter) {
        this.filter = filter;
        return this;
      }

      /** The standard list page token. */
      @com.google.api.client.util.Key
      private java.lang.String pageToken;

      /** The standard list page token.
       */
      public java.lang.String getPageToken() {
        return pageToken;
      }

      /** The standard list page token. */
      public List setPageToken(java.lang.String pageToken) {
        this.pageToken = pageToken;
        return this;
      }

      @Override
      public List set(String parameterName, Object value) {
        return (List) super.set(parameterName, value);
      }
    }

  }

  /**
   * Builder for {@link CloudNaturalLanguageAPI}.
   *
   * <p>
   * Implementation is not thread-safe.
   * </p>
   *
   * @since 1.3.0
   */
  public static final class Builder extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient.Builder {

    /**
     * Returns an instance of a new builder.
     *
     * @param transport HTTP transport, which should normally be:
     *        <ul>
     *        <li>Google App Engine:
     *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
     *        <li>Android: {@code newCompatibleTransport} from
     *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
     *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
     *        </li>
     *        </ul>
     * @param jsonFactory JSON factory, which may be:
     *        <ul>
     *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
     *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
     *        <li>Android Honeycomb or higher:
     *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
     *        </ul>
     * @param httpRequestInitializer HTTP request initializer or {@code null} for none
     * @since 1.7
     */
    public Builder(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
        com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      super(
          transport,
          jsonFactory,
          DEFAULT_ROOT_URL,
          DEFAULT_SERVICE_PATH,
          httpRequestInitializer,
          false);
    }

    /** Builds a new instance of {@link CloudNaturalLanguageAPI}. */
    @Override
    public CloudNaturalLanguageAPI build() {
      return new CloudNaturalLanguageAPI(this);
    }

    @Override
    public Builder setRootUrl(String rootUrl) {
      return (Builder) super.setRootUrl(rootUrl);
    }

    @Override
    public Builder setServicePath(String servicePath) {
      return (Builder) super.setServicePath(servicePath);
    }

    @Override
    public Builder setHttpRequestInitializer(com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      return (Builder) super.setHttpRequestInitializer(httpRequestInitializer);
    }

    @Override
    public Builder setApplicationName(String applicationName) {
      return (Builder) super.setApplicationName(applicationName);
    }

    @Override
    public Builder setSuppressPatternChecks(boolean suppressPatternChecks) {
      return (Builder) super.setSuppressPatternChecks(suppressPatternChecks);
    }

    @Override
    public Builder setSuppressRequiredParameterChecks(boolean suppressRequiredParameterChecks) {
      return (Builder) super.setSuppressRequiredParameterChecks(suppressRequiredParameterChecks);
    }

    @Override
    public Builder setSuppressAllChecks(boolean suppressAllChecks) {
      return (Builder) super.setSuppressAllChecks(suppressAllChecks);
    }

    /**
     * Set the {@link CloudNaturalLanguageAPIRequestInitializer}.
     *
     * @since 1.12
     */
    public Builder setCloudNaturalLanguageAPIRequestInitializer(
        CloudNaturalLanguageAPIRequestInitializer cloudnaturallanguageapiRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(cloudnaturallanguageapiRequestInitializer);
    }

    @Override
    public Builder setGoogleClientRequestInitializer(
        com.google.api.client.googleapis.services.GoogleClientRequestInitializer googleClientRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(googleClientRequestInitializer);
    }
  }
}
